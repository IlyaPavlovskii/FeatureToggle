plugins {
    id("maven-publish")
    alias(libs.plugins.com.android.application) apply(false)
    alias(libs.plugins.com.android.library) apply(false)
    alias(libs.plugins.org.jetbrains.kotlin.android) apply(false)
    alias(libs.plugins.com.github.ben.manes.versions) apply(false)
    alias(libs.plugins.nl.littlerobots.version.catalog.update) apply(false)
    alias(libs.plugins.gradle.nexus.publish)
}

Properties properties = new Properties()
project.rootProject.file('sonatype-cred.properties').withInputStream { is -> properties.load(is) }
ext["ossrhUsername"] = properties["ossrhUsername"] ?: System.getenv('OSSRH_USERNAME')
ext["ossrhPassword"] = properties["ossrhPassword"] ?: System.getenv('OSSRH_PASSWORD')
ext["sonatypeStagingProfileId"] = properties["sonatypeStagingProfileId"] ?: System.getenv('SONATYPE_STAGING_PROFILE_ID')
ext["signing.keyId"] = properties["signing.keyId"] ?:System.getenv('SIGNING_KEY_ID')
ext["signing.password"] = properties["signing.password"] ?: System.getenv('SIGNING_PASSWORD')
ext["signing.key"] = properties["signing.key"] ?: System.getenv('SIGNING_KEY')

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            stagingProfileId.set(sonatypeStagingProfileId)
            username.set(ossrhUsername)
            password.set(ossrhPassword)
        }
    }
}
